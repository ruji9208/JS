// 
// 자, 모든 것은 데이터 타입으로부터 시작했어.
// 데이터 타입은, 자바스크립트가 이해할 수 있는 데이터의 종류들이야.
// 우리가 하나 아는 건 string인데, 이것처럼 "text"인 거야
// string은 '로 시작해서 '로 끝내면 돼. 아니면 "로 시작해서 "로 끝나면 돼
// 숫자도 있어. 자바스크립트는 이 숫자들로 뭘 해야할 지 알고 있지. 여기서 좋은 점은 값을 저장할 수 있다는 것이야.

// 그냥 이렇게 데이터를 적는 대신에 데이터를 variable에 저장할 수 있지. variable을 만드는 두가지 옵션이 있어
// 한 가지 방법은 const a = 5; 라고 하는 거야.
// 그럼 이제 console.log(a)라고 하면 자바스크립트가 5를 출력하겠지. 이렇게 작동해.

const a = 5
console.log(a);

// 즉, 내가 a를 참조할 때 실제로 가서 a의 값을 확인하는 거야. 바로 인 거지. 
// 그건 좋은데 문제는 가끔씩, variable 값을 업데이트 하고 싶을 때가 분명 있을 거란 거야
// 예를 들어서 const로 '니꼬는 뚱뚱한가'라는 변수를 만들어서 일단은 true라고 해볼게.
// 왜냐면 그땐 겨울이었고 추워서 헬스장에 가지 않았거든 하지만 지금은 여름이고 멋져 보이고 싶으니까 헬스도 가고 식단도 할 거라고 해보자
// 그러면 isNicoFat = false라고 해야겠지. 하지만 문제는 자바스크립트가 Nico가 살을 빼는 것을 허용하질 않아
// 왜냐면, 우린 isNicoFat을 constant로 만들었기 때문이야. constant는 우리가 값을 업데이트 하지 못하게 해

// const isNicoFat = true;
// isNicoFat = false; 
// Uncaught TypeError: Assignment to constant variable.
// at 2.9 Recap.js:21

// 그래서 그 대신에 우리는 let을 사용할 거야. let은 const와 동일한 일을 해. Nico가 뚱뚱하다는 걸 기억하고 있을 거야.
// a가 라고 기억하는 것처럼. 근데 let과 const의 차이는, let은 업데이트를 할 수 있다는 것이야.
// 그래서 variable을 업데이트 하고 싶다면, variable 앞에 let을 사용해서 생성해야 해

let isNicoFat = true;
isNicoFat = false; 
console.log(isNicoFat); 

// 물론 여기선 let을 다시 붙이지 않아도 돼. 왜냐면 우리가 variable을 만드는 것이 아니고 variable을 업데이트 하는 것이기 때문이야. 
// 매우 매우 다른 거지. 그리고 규칙을 기억해야 돼! 규칙은, 
// 항상 const를 사용하되 가끔씩 필요하다면 let을 사용하고, 절대 절대로 var을 사용하지 말 것이야.
// 내가 말했듯이 var은 오래된 자바스크립트고, 자바스크립트는 마치 프랑켄슈타인같아. 
// 개선..한다기 보다는 단지 새로운 것을 그 위에 쌓아갈 수 밖에 없어 우리는 오래된 것을 없애버릴 수는 없어
// var은 과거의 것이고, var은 let 같은 거지만 var을 쓰면 let, const처럼 구분을 할 수 없게 돼
// 전에 말했지만, 우리가 코드를 읽으면서 어떤 의미를 얻을 수 있다면 그게 더 바람직할 거야
// var 절대로 안돼! 항상 const! 가끔 let! 네버 var!
// 
// const와 let에 대해서 배웠고, 더 많은 데이터타입을 배웠어. 더 많은 것을 variable에 저장할 수 있게 되었지.
// 우리는 숫자를 저장할 수 있다는 것을 알고, string을 저장할 수 있는 것을 알아
// 게다가 우리는 true와 false를 저장하는 법을 배웠어. 문자가 아닌 거지
// 이건 문자이지만 이건 아니야.true와 false는 boolean이라고 불리는 것이야.
// 알았지? 1과 0, ON과 OFF. 두 가지 옵션만 있어, true와 false. 그걸로 끝.
// 숫자는 무한하고 문자는 뭐든 자유롭게 적을 수 있지만 boolean은 두 가지 옵션만 있어. true와 false지.

// 그리고 우리는 다른 종류의 value를 배웠는데 이건 null이라고 불리는 건데, 비어있음을 뜻하는 것이지
// 이건 때때로 네가 코드 안에서 작성해야 할 거야. 만약 variable 안에 아무것도 없다는 것을 확실히 해두고 싶다면 말이지
// 그래서 null은 변수에 할당되는 값이야.

// 프로그래머가 null이라고 작성해서 말 그대로 여기는 "비어있다"고 하고 싶을 때 말이지.
// "비어있음"은 뭔가 있는 거야. 이상하게 들리겠지만, 이건 말 그대로 "비어있음"을 뜻해.

// 그러고 나서 다른 이상한 데이터 타입을 배웠는데 바로 undefined야.
// undefined는, 변수에 값을 부여하지 않은 상태야
// 그래서 내가 만약에 let hello;라고 하고 값을 주지 않고 console.log로 hello를 하게 될 경우, 새로고침 하면 짠!
// hello는 undefined야.  이 말은 hello가 존재하지만, 안에 아무것도 없다는 말이지.
// 더 나은 표현으로, 값이 없다는 것이지. 값이 전혀 없다는 거야.
// 내가 먄약에 null이라고 하면 그러면 "비어있음"이 들어있는 거야. undefined와는 다른 거지 
// 지금 이건 undefined인 거야. 분명히 하자면, 자바스크립트는 null과 undefined가 있는데 모든 프로그래밍 언어가 그런 건 아니야.
// 
// 그 외에 다른 것들, 즉 문자인 string, 숫자, 그리고 boolean과 null은 모든 프로그래밍 언어가 갖고 있는 타입들이야
// 하지만 undefined는 매우 이상한 타입이라서, 얘를 갖는 언어는 그리 많지 않아
// undefined와 null을 갖는 언어가 뭐가 있는지 잘 기억이 안나는데 예를 들어서 파이썬에서는 null 대신에 none이 있고 go에는 nil이 있지. 
// 하지만 undefined는 좀 이상한 녀석인데 이건 자바스크립트가 일 만에 만들어진 언어라서 그런 것도 있어. 어쨌든 넘어가자
// 
// 우린 undefined, null과 같은 것을 배우고 나서 어떻게 데이터를 더 나은 방법으로 정리하는지 배웠어
// 때때로 넌 하나의 variable 안에 많은 수의 데이터를 가지고 싶을 수 있어. 가장 좋은 예시 중 하나는 한 주의 요일을 저장하는 거지.
// 그래서 여기에 일종의 list, 다른 말로 array라는 것을 만들고 우리는 단지 []를 작성하면 되는 거야
// 
// 이렇게 말이지. 그냥 이걸로 array를 만든 거야. 다른 거 할 필요 없이 이렇게만 하면 돼
// array 만들기. 좋아
// 
// 자 이 array를 값으로 채워보자. 말 그대로 원하는 어떤 것이든 넣으면 돼. 모든 유효한 데이터 타입이나 variable이 들어갈 수 있어.
// 예를 들어서 1, 2, false, true, null.. undefined, 어쩌면 "text"도, 원한다면 variable도 말이지.
// 이렇게 말이지.array 안에는 우리가 원하는 뭐든 넣으면 돼. 알았지?
// 그리고 이 days라는 variable을 사용하는 어디에서든 이 variable 안에 이 모든 데이터가 있는 거야.
// 이건 매우 유용해. 내가 말했듯이 예를 들어서 days... 아니 toBuy라고 해보자 
// 여기에 "potato", "tomato" 그리고 "pizza"라고 하면 내가 toBuy라고 했을 때 이 세 가지를 받는 거야
// 그리고 원한다면 array에 있는 item을 접근할 수 있다는 것을 배웠어
// 그래서 내가 만약 array에 세번째 item을 받고 싶다면 나는 하나, 둘, 셋 하고 셀 거야. 
// 근데 컴퓨터는 사람이 아니라서 컴퓨터는 0부터 시작해. 0, 1, 2 이렇게 
// 그래서 만약에 "pizza"를 받고 싶다면, 나는 toBuy[2]라고 하면 돼 여기에서 예를 들어 console.log(toBuy[2])라고 해볼게. 
// 그러면 이건 pizza가 나오지. 또한, 내가 언급했나 모르겠는데 원한다면 item을 update를 할 수도 있어
// 예를 들어서, 나 다이어트 하고 있다고 말했었지. 그래서 pizza를 사는 대신에 "water"만 구매한다고 해보자.
// 그런 다음에 console.log(toBuy)를 해볼게
// 짠! 보다시피 potato, tomato, pizza가 있었고 이제는 potato, tomato, 그리고 water가 있지. 보다시피.
// 그치? 만약 이렇게만 한다면 우리는 toBuy에서 인덱스 2번인 값을 받는 거야. 
// 0, 1, 2. 만약 우리가 이렇게 한다면, 우리는 toBuy의 2번 인덱스에 값을 설정하는 거야
// 0, 1, 2 여기에 water가 할당되는 거야. 
// 이게 바로 여기가 바뀐 이유이지. potato, tomato, pizza 였었는데 potato, tomato, water가 됐어
// 
// 그리고 우리는 또한 array에 뭔가 추가할 수 있다는 것을 알았어. 왜냐면 array는 지루한 variable이 아니거든.
// array는 뭔가를 할 수 있어. 예를 들어서 toBuy라고 하고 . 을 찍으면 보다시피 
// 이것들이 네가 array로 할 수 있는 모든 것들이고 나중에 몇 가지 알아볼 건데, 지금 써보려고 하는 건 push야.
// push는 array 끝에 item을 하나 더 추가하는 거야. array는 이 item을 받아서, array 끝에 둘 거야. 알았지?
// 
// 정말 그렇게 되는지 확인해보자. 짠 보다시피 작동하고 있어. 이게 meat를 array 끝에 밀어넣었어 (push)
// 자 이게 복습 파트 1이야. 우리는 데이터 타입을 배웠고 variable에 이러한 데이터를 저장하는 법을 배웠어.
// 우리는 데이터를 array안에 정리하는 법을 배웠고 그래서 수정할 수 있는 list를 얻게 되었어
// 우리는 어떻게 element를 받는지 알고 어떻게 업데이트 하는지 알고 list에 하나를 더 추가하는 방법도 배웠어
// 
// 다음 영상에서는 계속해서 object와 function에 대해서 복습할 거야
// 다음 영상에서 보자. 안녕