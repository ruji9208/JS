/* 좋아
이번 섹션에서 할 clock 부분을 시작하기 전에, 내가 새로 만든 폴더들을 먼저 보여줄게
두 개의 폴더로 새로 만들었어
하나는 CSS 폴더고 하나는 Javascript 폴더야
또 app.js 파일의 이름을 greetings.js로 바꿨어
왜냐면 내가 파일 하나에 모든 코드를 넣는 걸 별로 안 좋아하거든
그렇게 하면 너무 과하잖아?
그래서 서로 다른 기능들에 대해서 하나씩 다른 파일로 분리시켰어
예를들면 여기있는 greetings 파일은 전체 App에서 greetings 부분만 다루게될 거야
그리고 여기 clock.js 파일은 clock을 만들게될 거야
나머지 기능들도 그런 방식으로 할게
난 이런식으로 세분화해서 관리하는 방식(divide and conquer)을 좋아해
이렇게 하면 코드가 더 짧아지기도 해서 난 이런 구조를 좋아해
CSS 와 Javascript 두 개의 폴더를 만들었고
Javascript폴더 내부의 app.js의 파일명은 greetings.js로 변경했어
그리고 clock.js라는 새 파일을 만들었지
그리고 내 html 파일을 보면, greetings.js와 clock.js를 import 하고 있지
나랑 같은 방식으로 해도 좋고, 원한다면 파일 하나에 모든 내용을 작성해도 괜찮아
하지만 역시 그건 너무 빡빡해 보여서 다른 곳에 분리시키는 게 좋을 거야
좋아 그게 다야
그럼 이제 시계를 넣어보자
시계를 넣기 위해 h1을 새로 만들게
아니야, h2가 좋을 것 같아
적절한가 싶거든, clock이 greetings보다 h1에 적합할 것 같진 않아
음.. 글쎄 어떡할까
어쨌든! 이 h2의 id는 clock이라고 할게
이제부터 하는 건, 우리가 이전에 했던 작업이랑 굉장히 비슷할거야
h2를 받아와서 그 내부에 text를 입력하기만 하면 돼
좋아 이제 시계를 만들어볼게
여기서 clock을 불러와보자
document.querySelector 에 h2와 id를 함께 사용하는 방법도 있고
id만 사용한다던가
getElementById("clock")을 사용하는 방법도 있어
마음에 드는 방식대로 해면돼
그럼 이제 제대로 동작하는지 한번 확인해볼까
(위와 같이 작성)
좋아, 여기로 와서 새로고침하면..
오예! 잘 작동하는군 좋아~
불러온 clock이 잘 동작하고 있어. 완벽해!
clock은 default로 00시 00분을 나타내도록 하자
default 설정만 그렇다는 거야
됐다
Javascript이벤트가 시작하기 전에는
짠, 시계는 이런식으로 시작하게 될거야
그럼 이제부터 intervals 와 timeout 에 대해 먼저 얘기해보자
그러고 나서 clock을 만들어보면
저 두 가지 개념을 왜 정말 멋지다고 하는건지 알 수 있을거야
interval이 무엇이냐, Interval은 '매번' 일어나야 하는 무언가를 말해
예를 들어 '매 2초' 라고 하면 이게 interval 이라는 거지
그러니까 매 2초마다 네가 무슨 일이 일어나게 하고 싶을 때
그럴때 쓰는게 interval이야
함수를 만들어보자
sayHello라고 할게
이 함수는 console.log 로 "hello"를 할거야
내가 하고 싶은 건 이 함수를 매 2초마다 실행하는거야
오케이? 다행히 Javascript는 이미 그 개념을 내장하고 있어
왜냐면 가끔 이게 필요할 때가 있거든
서버를 확인한다던가
예를 들어 서버가 매 2초마다 주식 시장 api를 확인해야 한다거나 그런거지
아니면 5초에 한번씩 일어나야하는 작업이거나, 상황에 따르는 거야
이런 개념이 Javascript에도 있다는 말이야
해보자
이런 기능을 제공하는 tool이 바로 setInterval()야
바로 여기 필요한 기능이지
좋아 여기 작성해보자
setInterval는 두 개의 argument를 받아
첫번째 argument는 네가 실행하고자 하는 function이야
두번째 argument는 호출되는 function 간격을 몇 ms(milliseconds)로 할 지 쓰면 돼
여기서는 function sayHello를 실행할거고
매 5000ms 마다 호출되도록 하자. 즉 5초 마다 호출되는 거야
저장하고 새로고침을 하면
처음엔 console에서 아무것도 보지 못할 거야
알겠지?
그리고 5초가 지나면 console에서 첫번째 hello를 볼 수 있지
좋아, 확인해보자
개발자 도구의 콘솔탭을 열고 새로고침하고 5초 기다려보자
새로고침!
5초 기다리고 나면 console에서 뭔가 볼 수 있을 거야
나왔지
짠! 잘 되네! 그리고 또 다음 5초가 지나면..
Hello 가 또 출력됐어
잘 알겠지?
방금 본 것처럼 한 함수를 특정 시간마다 실행하고 있어
5초마다 실행되게 했지
이게 바로 interval이야 멋지지? 진짜 쩔지
진짜 좋은 기능이야
이걸 이해하고, 또 사용하는 것 또한 정말 정말 정말 너~무 쉬워
우리가 해야할 건, setInterval를 호출하는것 뿐이야
그게 다야
setInterval, 호출하려는 function의 이름
그리고 매 호출 사이에 얼마나 기다릴지 시간을 써주면
다 됐어!
좋아, 이게 setInterval이었어
정확히 이게 우리가 clock을 만들 방식이야
그치만 내가 가르쳐주고 싶은게 한 가지 더 있어
그게 바로 timeout이야
그건 다음 영상에서 설명할게
바이바이
 */